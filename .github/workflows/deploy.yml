name: Deploy Python Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv pip install --system requests

      - name: Get package version and name
        id: get_package_info
        run: |
          VERSION=$(uv pip show pyproject.toml | grep "Version:" | awk '{print $2}')
          PKG_NAME=$(uv pip show pyproject.toml | grep "Name:" | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "pkg_name=$PKG_NAME" >> $GITHUB_OUTPUT
          echo "Package name: $PKG_NAME"
          echo "Package version: $VERSION"

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Check and delete existing version via SSH
        id: version_check
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          PKG_NAME="${{ steps.get_package_info.outputs.pkg_name }}"
          VERSION="${{ steps.get_package_info.outputs.version }}"
          WHL_FILE="${PKG_NAME}-${VERSION}-py3-none-any.whl"
          TAR_FILE="${PKG_NAME}-${VERSION}.tar.gz"

          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} "
            cd /root/pypi_packages && \
            if [ -f ${WHL_FILE} ] || [ -f ${TAR_FILE} ]; then \
              rm -f ${WHL_FILE} ${TAR_FILE}; \
              echo 'Deleted existing package files'; \
            else \
              echo 'No existing package files found'; \
            fi
          "

      - name: Build package
        run: uv pip install --system build && python -m build

      - name: Upload package
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: uv publish --repository http://kairosresearch.io:8010
